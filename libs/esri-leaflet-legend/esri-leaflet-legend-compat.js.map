{"version":3,"sources":["../src/Util.js","../src/Services/MapService.js","../src/Services/FeatureLayer.js","../src/Tasks/Legend.js","../src/Tasks/Legend/SymbolLegend.js","../src/Tasks/Legend/SymbolRenderer.js","../src/Layers/DynamicMapLayer.js","../src/Layers/FeatureLayer/FeatureLayer.js","../src/Controls/Legend.js"],"names":["EsriLeaflet","Util","reduce","values","initial","fn","cb","context","next","index","sync","i","length","done","curr","err","val","call","MapService","include","legend","callback","Legend","this","run","FeatureLayerService","L","esri","Task","extend","path","params","f","_service","request","_request","initialize","endpoint","_renderer","SymbolRenderer","prototype","error","response","code","_collectLegendFromLayers","drawingInfo","_symbolsToLegends","result","layers","metadata","len","subLayerIds","push","_getLayersLegends","layerData","layerDefs","self","layer","_getLayerLegend","data","concat","id","_drawingInfoToLegend","layerId","layerType","type","layerName","name","maxScale","minScale","_getRendererSymbols","renderer","symbols","uniqueValueInfos","slice","classBreakInfos","symbol","label","description","value","defaultSymbol","defaultLabel","_renderSymbol","image","height","url","imageData","contentType","width","render","Class","statics","SYMBOL_TYPES","MARKER","LINE","FILL","PICTURE_MARKER","PICTURE_FILL","TEXT","DEFAULT_SIZE","canvas","Tasks","replace","document","createElement","ctx","getContext","_setSize","_renderMarker","_renderLine","_renderFill","_renderImageMarker","_renderImageFill","_renderText","toDataURL","size","lineWidth","outline","lineOffset","Math","max","style","_hatchCanvas","color","_setRotation","fillStyle","_formatColor","fillRect","Error","strokeStyle","_setDashArray","rect","stroke","beginPath","moveTo","lineTo","closePath","r","rx","ry","xoffset","yoffset","angle","arc","PI","fill","_fillImage","_loadImage","_drawImage","drawImage","rotate","parseFloat","dashArray","_formatDashArray","setLineDash","_drawCross","offset","w","h","join","dashValues","_getImageData","toDImageData","Image","src","pattern","createPattern","crossOrigin","onload","onerror","e","indexOf","Date","getTime","DynamicMapLayer","service","FeatureLayer","LegendControl","Control","options","listTemplate","layerTemplate","listRowTemplate","emptyLabel","container","_layers","isArray","onAdd","map","DomUtil","create","DomEvent","disableScrollPropagation","disableClickPropagation","_load","_onLoad","layersHtml","legendsHtml","j","jj","layerLegend","JSON","parse","stringify","_validateLegendLabel","template","legends","_container","innerHTML","legendControl"],"mappings":"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","file":"esri-leaflet-legend-compat.js","sourcesContent":["/**\n * @example\n * <code>\n * L.esri.Util.queue(\n *   [1, 2, 3], [], function(curr, item, cb){\n *     setTimeout(function(){\n *       cb(null, curr.concat([item + 10]));\n *     }, 200);\n *   }, function(err, result) {\n *     console.log(result); // [11, 12, 13]\n * });\n * </code>\n * @param  {Array.<*>} values\n * @param  {*}         initial\n * @param  {Function}  fn       process item fn(memo, item, callback)\n * @param  {Function}  done     queue complete\n * @param  {*=}        context\n */\nEsriLeaflet.Util.reduce = function(values, initial, fn, cb, context) {\n  var curr = initial;\n\n  function next(index) {\n    var sync = true;\n    for (var i = index; i < values.length; i++) {\n      var done = false;\n      fn(curr, values[i], function(err, val) {\n        if (err) {\n          return cb.call(context, err, curr);\n        }\n        done = true;\n        curr = val;\n        if (!sync) {\n          next(i + 1);\n        }\n      });\n      sync = done;\n      if (!sync) {\n        return;\n      }\n    }\n    cb.call(context, null, curr);\n  }\n\n  next(0);\n};\n","EsriLeaflet.MapService.include({\n\n  legend: function(callback, context) {\n    return new EsriLeaflet.Legend(this).run(callback, context);\n  }\n\n});\n","EsriLeaflet.FeatureLayerService.include({\n\n  legend: function(callback, context) {\n    return new L.esri.Legend(this).run(callback, context);\n  }\n\n});\n","EsriLeaflet.Legend = EsriLeaflet.Task.extend({\n  path: 'legend',\n\n  params: {\n    f: 'json'\n  },\n\n  run: function(callback, context) {\n    if (this._service) {\n      return this._service.request(this.path, this.params, callback, context);\n    } else {\n      return this._request('request', this.path, this.params, callback, context);\n    }\n  }\n\n});\n\nEsriLeaflet.legend = function(params) {\n  return new EsriLeaflet.Legend(params);\n};\n","EsriLeaflet.Legend.include({\n\n  initialize: function(endpoint) {\n    this._renderer = new EsriLeaflet.Legend.SymbolRenderer();\n    EsriLeaflet.Task.prototype.initialize.call(this, endpoint);\n  },\n\n  run: function(callback, context) {\n    function cb(error, response) {\n      if (error && error.code === 400) { // ArcGIS server >=10.0\n        this._collectLegendFromLayers(callback, context);\n      } else if (response && response.drawingInfo) {\n        this._symbolsToLegends([response], function(err, result) {\n          callback.call(context, err, {\n            layers: result\n          });\n        });\n      } else {\n        callback.call(context, error, response);\n      }\n    }\n\n    if (this._service) {\n      return this._service.request(this.path, this.params, cb, this);\n    } else {\n      return this._request('request', this.path, this.params, cb, this);\n    }\n  },\n\n  _collectLegendFromLayers: function(callback, context) {\n    this._service.metadata(function(error, response) {\n      if (error) {\n        return callback.call(context, error);\n      }\n\n      var layers = [];\n      for (var i = 0, len = response.layers.length; i < len; i++) {\n        if (!response.layers[i].subLayerIds) {\n          layers.push(response.layers[i]);\n        }\n      }\n\n      this._getLayersLegends(layers, function(err, layerData) {\n        if (err) {\n          callback.call(context, err);\n        } else {\n          this._symbolsToLegends(layerData, function(err, result) {\n            callback.call(context, err, {\n              layers: result\n            });\n          });\n        }\n      }, this);\n    }, this);\n  },\n\n  _getLayersLegends: function(layerDefs, callback, context) {\n    var layerData = [];\n    var self = this;\n\n    EsriLeaflet.Util.reduce(layerDefs, [], function(curr, layer, cb) {\n      self._getLayerLegend(layer, function(err, data) {\n        if (err) {\n          return cb(err, null);\n        }\n        cb(null, curr.concat(data));\n      }, self);\n    }, function(err, result) {\n      callback.call(context, err, result);\n    });\n  },\n\n  _getLayerLegend: function(layer, callback, context) {\n    this._service.request(layer.id, {\n      f: 'json'\n    }, callback, context);\n  },\n\n  _symbolsToLegends: function(layerData, callback, context) {\n    var self = this;\n    EsriLeaflet.Util.reduce(layerData, [], function(curr, layer, cb) {\n      self._drawingInfoToLegend(layer.drawingInfo, function(err, legend) {\n        if (err) {\n          return cb(err, null);\n        }\n        cb(null, curr.concat([{\n          layerId: layer.id,\n          layerType: layer.type,\n          layerName: layer.name,\n          maxScale: layer.maxScale,\n          minScale: layer.minScale,\n          legend: legend\n        }]));\n      }, self);\n    }, function(err, result) {\n      callback.call(context, err, result);\n    });\n  },\n\n  _getRendererSymbols: function(renderer) {\n    var symbols;\n    if (renderer.type === 'uniqueValue') {\n      symbols = renderer.uniqueValueInfos.slice();\n    } else if (renderer.type === 'classBreaks') {\n      symbols = renderer.classBreakInfos.slice();\n    } else if (renderer.type === 'simple') {\n      symbols = [{\n        symbol: renderer.symbol,\n        label: renderer.label,\n        description: renderer.description,\n        value: renderer.value\n      }];\n    }\n    if (renderer.defaultSymbol) {\n      symbols.push({\n        symbol: renderer.defaultSymbol,\n        label: renderer.defaultLabel,\n        description: '',\n        value: null\n      });\n    }\n    return symbols;\n  },\n\n  _drawingInfoToLegend: function(drawingInfo, callback, context) {\n    var self = this;\n    EsriLeaflet.Util.reduce(\n      this._getRendererSymbols(drawingInfo.renderer), [],\n      function(curr, symbol, cb) {\n        self._renderSymbol(symbol, function(err, image) {\n          if (err) {\n            return cb(err, curr);\n          }\n          cb(null, curr.concat([{\n            label: symbol.label,\n            height: image.height,\n            url: symbol.symbol.url,\n            imageData: image.imageData,\n            contentType: image.contentType,\n            width: image.width,\n            values: [symbol.value || '']\n          }]));\n        }, self);\n      },\n      function(err, legend) {\n        callback.call(context, err, legend);\n      });\n  },\n\n  _renderSymbol: function(symbol, callback, context) {\n    return this._renderer.render(symbol.symbol, callback, context);\n  }\n\n});\n","EsriLeaflet.Legend.SymbolRenderer = L.Class.extend({\n\n  statics: {\n    SYMBOL_TYPES: {\n      MARKER: 'esriSMS',\n      LINE: 'esriSLS',\n      FILL: 'esriSFS',\n      PICTURE_MARKER: 'esriPMS',\n      PICTURE_FILL: 'esriPFS',\n      TEXT: 'esriTS'\n    },\n    DEFAULT_SIZE: 20\n  },\n\n  render: function(symbol, callback, context) {\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var imageData = symbol.imageData;\n    this._setSize(canvas, symbol);\n\n    function done(error, imageData) {\n      if (error) {\n        callback.call(context, error);\n      } else {\n        callback.call(context, null, {\n          width: canvas.width || EsriLeaflet.Tasks.Legend.SymbolRenderer.DEFAULT_SIZE,\n          height: canvas.height || EsriLeaflet.Tasks.Legend.SymbolRenderer.DEFAULT_SIZE,\n          imageData: imageData.replace('data:image/png;base64,', ''),\n          url: null,\n          contentType: 'image/png'\n        });\n      }\n    }\n\n    if (symbol.imageData) {\n      return done(null, symbol.imageData);\n    }\n\n    switch (symbol.type) {\n      case 'esriSMS':\n        this._renderMarker(ctx, symbol, done);\n        break;\n      case 'esriSLS':\n        this._renderLine(ctx, symbol, done);\n        break;\n      case 'esriSFS':\n        this._renderFill(ctx, symbol, done);\n        break;\n      case 'esriPMS':\n        this._renderImageMarker(ctx, symbol, done);\n        break;\n      case 'esriPFS':\n        this._renderImageFill(ctx, symbol, done);\n        break;\n      case 'esriST':\n        this._renderText(ctx, symbol, done);\n        break;\n      default:\n        break;\n    }\n  },\n\n  _renderText: function(ctx, symbol, callback) {\n    callback(null, ctx.canvas.toDataURL());\n  },\n\n  _renderFill: function(ctx, symbol, callback) {\n    var size = EsriLeaflet.Tasks.Legend.SymbolRenderer.DEFAULT_SIZE;\n    var lineWidth = symbol.outline ? symbol.outline.width : 1;\n    var lineOffset = Math.max(5, lineWidth * 3);\n    switch (symbol.style) {\n\n      case 'esriSFSVertical':\n        this._hatchCanvas(ctx, size, symbol.color, lineWidth, lineOffset);\n        break;\n\n      case 'esriSFSHorizontal':\n        this._setRotation(ctx, 90);\n        this._hatchCanvas(ctx, size, symbol.color, lineWidth, lineOffset);\n        break;\n\n      case 'esriSFSBackwardDiagonal':\n        this._setRotation(ctx, -45);\n        this._hatchCanvas(ctx, size, symbol.color, lineWidth, lineOffset);\n        break;\n\n      case 'esriSFSForwardDiagonal':\n        this._setRotation(ctx, 45);\n        this._hatchCanvas(ctx, size, symbol.color, lineWidth, lineOffset);\n        break;\n\n      case 'esriSFSCross':\n        this._hatchCanvas(ctx, size, symbol.color, lineWidth, lineOffset);\n        this._setRotation(ctx, 90);\n        this._hatchCanvas(ctx, size, symbol.color, lineWidth, lineOffset);\n        break;\n\n      case 'esriSFSDiagonalCross':\n        this._setRotation(ctx, 45);\n        this._hatchCanvas(ctx, size, symbol.color, lineWidth, lineOffset);\n        this._setRotation(ctx, 45);\n        this._hatchCanvas(ctx, size, symbol.color, lineWidth, lineOffset);\n        break;\n\n      case 'esriSFSSolid':\n        ctx.fillStyle = this._formatColor(symbol.color);\n        ctx.fillRect(0, 0, size, size);\n        break;\n\n      case 'esriSFSNull':\n        break;\n\n      default:\n        throw new Error('Unknown SFS style: ' + symbol.style);\n    }\n\n    if (symbol.outline) {\n      ctx.strokeStyle = this._formatColor(symbol.outline.color);\n      ctx.lineWidth = symbol.outline.width;\n      ctx.fillStyle = this._formatColor([0, 0, 0, 0]);\n      this._setDashArray(ctx, symbol.outline);\n      ctx.rect(symbol.outline.width, symbol.outline.width,\n        size - symbol.outline.width, size - symbol.outline.width);\n      ctx.stroke();\n    }\n\n    callback(null, ctx.canvas.toDataURL());\n  },\n\n  _renderLine: function(ctx, symbol, callback) {\n    var size = EsriLeaflet.Legend.SymbolRenderer.DEFAULT_SIZE;\n    ctx.beginPath();\n    ctx.lineWidth = symbol.width;\n    ctx.strokeStyle = this._formatColor(symbol.color);\n    this._setDashArray(ctx, symbol); //\n\n    ctx.moveTo(0, size / 2);\n    ctx.lineTo(size, size / 2);\n\n    ctx.closePath();\n    ctx.stroke();\n    callback(null, ctx.canvas.toDataURL());\n  },\n\n  _renderMarker: function(ctx, symbol, callback) {\n    var xoffset = 0;\n    var yoffset = 0;\n    var size = symbol.size;\n    var r, rx, ry;\n\n    ctx.beginPath();\n\n    if (symbol.outline) {\n      ctx.strokeStyle = this._formatColor(symbol.outline.color);\n      ctx.lineWidth = symbol.outline.width;\n      xoffset += symbol.outline.width;\n      yoffset += symbol.outline.width;\n    }\n\n    this._setRotation(ctx, symbol.angle);\n\n    switch (symbol.style) {\n      case 'esriSMSCircle':\n        ctx.fillStyle = this._formatColor(symbol.color);\n        r = (size - 2 * xoffset) / 2;\n        ctx.arc(r + xoffset, r + xoffset, r, 0, 2 * Math.PI, false);\n        ctx.fill();\n        break;\n\n      case 'esriSMSX':\n        ctx.moveTo(xoffset, yoffset);\n        ctx.lineTo(size - xoffset, size - yoffset);\n        ctx.moveTo(size - xoffset, yoffset);\n        ctx.lineTo(xoffset, size - yoffset);\n        break;\n\n      case 'esriSMSCross':\n        ctx.moveTo(xoffset, size / 2);\n        ctx.lineTo(size - xoffset, size / 2);\n        ctx.moveTo(size / 2, yoffset);\n        ctx.lineTo(size / 2, size - yoffset);\n        break;\n\n      case 'esriSMSDiamond':\n        ctx.fillStyle = this._formatColor(symbol.color);\n        rx = (size - 2 * xoffset) / 2;\n        ry = (size - 2 * yoffset) / 2;\n\n        ctx.moveTo(xoffset, yoffset + ry);\n        ctx.lineTo(xoffset + rx, yoffset);\n        ctx.lineTo(xoffset + rx * 2, yoffset + ry);\n        ctx.lineTo(xoffset + rx, yoffset + 2 * ry);\n        ctx.lineTo(xoffset, yoffset + ry);\n        ctx.fill();\n        break;\n\n      case 'esriSMSSquare':\n        ctx.rect(xoffset, yoffset, size - 2 * xoffset, size - 2 * yoffset);\n        break;\n\n      case 'esriSMSTriangle':\n        ctx.fillStyle = this._formatColor(symbol.color);\n        rx = (size - 2 * xoffset) / 2;\n        ry = (size - 2 * yoffset) / 2;\n        ctx.moveTo(xoffset, yoffset + ry * 2);\n        ctx.lineTo(xoffset + rx, yoffset);\n        ctx.lineTo(xoffset + rx * 2, yoffset + ry * 2);\n        ctx.lineTo(xoffset, yoffset + ry * 2);\n        ctx.fill();\n        break;\n\n      default:\n        throw new Error('Unknown esriSMS style: ' + symbol.style);\n    }\n\n    ctx.closePath();\n    if (symbol.outline) {\n      ctx.stroke();\n    }\n    callback(null, ctx.canvas.toDataURL());\n  },\n\n  _renderImageFill: function(ctx, symbol, callback) {\n    this._setRotation(ctx, symbol.angle);\n    if (symbol.imageData) {\n      this._fillImage(ctx, symbol.imageData, symbol, symbol.contentType);\n      callback(null, ctx.toDataURL());\n    } else {\n      this._loadImage(symbol.url, function(err, image) {\n        this._fillImage(ctx, null, symbol, symbol.contentType, image);\n        callback(null, ctx.canvas.toDataURL());\n      }, this);\n    }\n  },\n\n  _renderImageMarker: function(ctx, symbol, callback) {\n    this._setRotation(ctx, symbol.angle);\n    if (symbol.imageData) {\n      this._drawImage(ctx, symbol.imageData, symbol.contentType);\n      callback(null, ctx.toDataURL());\n    } else {\n      this._loadImage(symbol.url, function(err, image) {\n        ctx.drawImage(image, 0, 0);\n        callback(null, ctx.canvas.toDataURL());\n      }, this);\n    }\n  },\n\n  _setSize: function(ctx, symbol) {\n    if (symbol.size) {\n      ctx.width = ctx.height = symbol.size;\n    } else if (symbol.type === 'esriSLS' ||\n      symbol.type === 'esriSFS') {\n      ctx.width = ctx.height = EsriLeaflet.Legend.SymbolRenderer.DEFAULT_SIZE;\n    } else {\n      ctx.width = symbol.width;\n      ctx.height = symbol.height;\n    }\n  },\n\n  _setRotation: function(ctx, angle) {\n    ctx.rotate(-parseFloat(angle) * Math.PI / 180);\n  },\n\n  _setDashArray: function(ctx, symbol) {\n    var dashArray = this._formatDashArray(symbol);\n    if (dashArray.length) {\n      ctx.setLineDash(dashArray);\n    }\n  },\n\n  _drawCross: function(ctx, xoffset, yoffset, size) {\n    ctx.moveTo(xoffset, yoffset);\n    ctx.lineTo(size - xoffset, size - yoffset);\n    ctx.moveTo(size - xoffset, yoffset);\n    ctx.lineTo(xoffset, size - yoffset);\n  },\n\n  _hatchCanvas: function(ctx, size, color, width, offset) {\n    var w = size * 2;\n    var h = size * 2;\n\n    for (var i = -w; i < w; i += offset) {\n      ctx.moveTo(i, -h);\n      ctx.lineTo(i, h);\n    }\n\n    ctx.lineWidth = width;\n    ctx.strokeStyle = this._formatColor(color);\n    ctx.stroke();\n  },\n\n  _formatColor: function(color) {\n    return 'rgba(' + color.slice(0, 3).join(',') + ',' + color[3] / 255 + ')';\n  },\n\n  _formatDashArray: function(symbol) {\n    var dashValues = [];\n\n    switch (symbol.style) {\n      case 'esriSLSDash':\n        dashValues = [4, 3];\n        break;\n      case 'esriSLSDot':\n        dashValues = [1, 3];\n        break;\n      case 'esriSLSDashDot':\n        dashValues = [8, 3, 1, 3];\n        break;\n      case 'esriSLSDashDotDot':\n        dashValues = [8, 3, 1, 3, 1, 3];\n        break;\n    }\n\n    //use the dash values and the line weight to set dash array\n    if (dashValues.length > 0) {\n      for (var i = 0, len = dashValues.length; i < len; i++) {\n        dashValues[i] *= symbol.width;\n      }\n    }\n\n    return dashValues;\n  },\n\n  _getImageData: function(ctx, symbol) {\n    return ctx.toDImageData(0, 0, symbol.width, symbol.height);\n  },\n\n  _fillImage: function(ctx, imageData, symbol, contentType, image) {\n    var size = L.esri.Legend.DEFAULT_SIZE;\n    var w = symbol.width || size;\n    var h = symbol.height || size;\n    if (imageData) {\n      image = new Image();\n      image.src = 'data:' + contentType + ';base64,' + imageData;\n    }\n\n    var pattern = ctx.createPattern(image, 'repeat');\n    ctx.rect(0, 0, w, h);\n    ctx.fillStyle = pattern;\n    ctx.fill();\n\n    if (symbol.outline) {\n      ctx.strokeStyle = this._formatColor(symbol.outline.color);\n      ctx.lineWidth = symbol.outline.width;\n      ctx.fillStyle = this._formatColor([0, 0, 0, 0]);\n      this._setDashArray(ctx, symbol.outline);\n      ctx.rect(symbol.outline.width, symbol.outline.width,\n        w - symbol.outline.width, h - symbol.outline.width);\n      ctx.stroke();\n    }\n  },\n\n  _drawImage: function(ctx, imageData, contentType) {\n    var image = new Image();\n    image.src = 'data:' + contentType + ';base64,' + imageData;\n    ctx.drawImage(image, 0, 0);\n  },\n\n  _loadImage: function(url, callback, context) {\n    var image = new Image();\n    image.crossOrigin = '';\n    image.onload = function() {\n      callback.call(context, null, this);\n    };\n    image.onerror = function(e) {\n      callback.call(context, {\n        code: 500\n      });\n    };\n    image.src = url + (url.indexOf('?') === -1 ? '?' : '&') +\n      'nc=' + (new Date()).getTime();\n  }\n\n});\n","EsriLeaflet.DynamicMapLayer.include({\n\n  legend: function(callback, context) {\n    return this.service.legend(callback, context);\n  }\n\n});\n","EsriLeaflet.FeatureLayer.include({\n\n  legend: function(callback, context) {\n    return this.service.legend(callback, context);\n  }\n\n});\n","EsriLeaflet.LegendControl = L.Control.extend({\n\n  options: {\n    listTemplate: '<ul>{layers}</ul>',\n    layerTemplate: '<li><strong>{layerName}</strong><ul>{legends}</ul></li>',\n    listRowTemplate: '<li><img width=\"{width}\" height=\"{height}\" src=\"data:{contentType};base64,{imageData}\"><span>{label}</span></li>',\n    emptyLabel: '<all values>',\n    container: null\n  },\n\n  initialize: function(layers, options) {\n    this._layers = L.Util.isArray(layers) ? layers : [layers];\n    L.Control.prototype.initialize.call(this, options);\n  },\n\n  onAdd: function(map) {\n    var container = this.options.container ||\n        L.DomUtil.create('div', 'leaflet-legend-control leaflet-bar');\n    L.DomEvent\n      .disableScrollPropagation(container)\n      .disableClickPropagation(container);\n\n    if (this._layers.length) {\n      this._load();\n    }\n    return container;\n  },\n\n  _load: function() {\n    L.esri.Util.reduce(this._layers, {\n      layers: []\n    }, function(curr, layer, cb) {\n      layer.legend(function(err, legend) {\n        if (err) {\n          return cb(err, curr);\n        }\n        curr.layers = curr.layers.concat(legend.layers);\n        cb(null, curr);\n      });\n    }, this._onLoad, this);\n  },\n\n  _onLoad: function(error, legend) {\n    if (!error) {\n      var layersHtml = '';\n      for (var i = 0, len = legend.layers.length; i < len; i++) {\n        var layer = legend.layers[i];\n        var legendsHtml = '';\n        for (var j = 0, jj = layer.legend.length; j < jj; j++) {\n          var layerLegend = JSON.parse(JSON.stringify(layer.legend[j]));\n          this._validateLegendLabel(layerLegend);\n          legendsHtml += L.Util.template(this.options.listRowTemplate, layerLegend);\n        }\n        layersHtml += L.Util.template(this.options.layerTemplate, {\n          layerName: layer.layerName,\n          legends: legendsHtml\n        });\n      }\n      this._container.innerHTML = L.Util.template(this.options.listTemplate, {\n        layers: layersHtml\n      });\n    }\n  },\n\n  _validateLegendLabel: function(layerLegend) {\n    if (!layerLegend.label && this.options.emptyLabel) {\n      layerLegend.label = this.options.emptyLabel;\n    }\n    layerLegend.label = layerLegend.label.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#39;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n});\n\nEsriLeaflet.legendControl = function(layers, options) {\n  return new L.esri.LegendControl(layers, options);\n};\n"]}